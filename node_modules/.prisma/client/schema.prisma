generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  receipts  Receipt[]
  files     ReceiptFile[]

  @@map("users")
}

model ReceiptFile {
  id            Int      @id @default(autoincrement())
  fileName      String   @map("file_name")
  filePath      String   @unique @map("file_path")
  isValid       Boolean? @map("is_valid")
  invalidReason String?  @map("invalid_reason")
  isProcessed   Boolean  @default(false) @map("is_processed")
  userId        Int      @map("user_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  user          User     @relation(fields: [userId], references: [id])
  receipt       Receipt?

  @@index([userId])
  @@index([filePath])
  @@map("receipt_file")
}

model Receipt {
  id           Int         @id @default(autoincrement())
  purchasedAt  DateTime    @map("purchased_at")
  merchantName String      @map("merchant_name")
  totalAmount  Float       @map("total_amount")
  filePath     String      @map("file_path")
  fileId       Int         @unique @map("file_id")
  userId       Int         @map("user_id")
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")
  user         User        @relation(fields: [userId], references: [id])
  file         ReceiptFile @relation(fields: [fileId], references: [id])

  @@index([userId])
  @@index([fileId])
  @@map("receipt")
}
